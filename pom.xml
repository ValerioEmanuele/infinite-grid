<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>blog.valerioemanuele.ig</groupId>
	<artifactId>infinite-grid</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>Infinite Grid</name>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
	</parent>

	<properties>
		<java.version>8</java.version>
		<org.projectlombok.version>1.18.16</org.projectlombok.version>
		<junit.version>5.7.0</junit.version>
		<spring.version>5.3.1</spring.version>
		<mockito.version>3.6.0</mockito.version>
		<spring.boot.version>2.4.0</spring.boot.version>
		<jackson.version>2.11.3</jackson.version>
		<hibernate.version>5.4.24.Final</hibernate.version>
		<spring.data.version>2.4.1</spring.data.version>
		<h2.version>1.4.200</h2.version>
		<commons.io.version>2.8.0</commons.io.version>
		<cobertura.version>2.7</cobertura.version>
		<coveralls.version>4.3.0</coveralls.version>
		<coveralls.timestampFormat>EpochMillis</coveralls.timestampFormat>
		 <!-- Default values for the jacoco-maven-plugin reports -->
	    <commons.jacoco.classRatio>1.00</commons.jacoco.classRatio>
	    <commons.jacoco.instructionRatio>0.90</commons.jacoco.instructionRatio>
	    <commons.jacoco.methodRatio>0.95</commons.jacoco.methodRatio>
	    <commons.jacoco.branchRatio>0.85</commons.jacoco.branchRatio>
	    <commons.jacoco.complexityRatio>0.85</commons.jacoco.complexityRatio>
	    <commons.jacoco.lineRatio>0.90</commons.jacoco.lineRatio>
	    <commons.jacoco.haltOnFailure>false</commons.jacoco.haltOnFailure>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
              		<timestampFormat>${coveralls.timestampFormat}</timestampFormat>
            	</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
		          <groupId>org.jacoco</groupId>
		          <artifactId>jacoco-maven-plugin</artifactId>
		          <version>${commons.jacoco.version}</version>
		          <!-- Note that since JaCoCo relies on an agent to perform tests,
		            it changes the surefire arguments line. If a component also
		            needs to change the argument line of maven-surefire-plugin,
		            then it must add ${argLine} property (which is set by JaCoCo)
		            in the argLine configuration element of maven-surefire-plugin
		            to preserve JaCoCo settings. -->
		          <executions>
		            <execution>
		              <id>prepare-agent</id>
		              <phase>process-test-classes</phase>
		              <goals>
		                <goal>prepare-agent</goal>
		              </goals>
		            </execution>
		            <execution>
		              <id>report</id>
		              <phase>site</phase>
		              <goals>
		                <goal>report</goal>
		              </goals>
		            </execution>
		            <execution>
		              <id>check</id>
		              <goals>
		                <goal>check</goal>
		              </goals>
		              <configuration>
		                <rules>
		                  <rule>
		                    <element>BUNDLE</element>
		                    <limits>
		                      <limit>
		                        <counter>CLASS</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.classRatio}</minimum>
		                      </limit>
		                      <limit>
		                        <counter>INSTRUCTION</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.instructionRatio}</minimum>
		                      </limit>
		                      <limit>
		                        <counter>METHOD</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.methodRatio}</minimum>
		                      </limit>
		                      <limit>
		                        <counter>BRANCH</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.branchRatio}</minimum>
		                      </limit>
		                      <limit>
		                        <counter>LINE</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.lineRatio}</minimum>
		                      </limit>
		                      <limit>
		                        <counter>COMPLEXITY</counter>
		                        <value>COVEREDRATIO</value>
		                        <minimum>${commons.jacoco.complexityRatio}</minimum>
		                      </limit>
		                    </limits>
		                  </rule>
		                </rules>
		                <haltOnFailure>${commons.jacoco.haltOnFailure}</haltOnFailure>
		              </configuration>
		            </execution>
		          </executions>
		        </plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
	      <id>travis-cobertura</id>
	      <build>
	        <plugins>
	          <plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>cobertura-maven-plugin</artifactId>
	            <version>${cobertura.version}</version>
	            <configuration>
	              <formats>
	                <format>xml</format>
	              </formats>
	            </configuration>
	          </plugin>
	          <plugin>
	            <groupId>org.eluder.coveralls</groupId>
	            <artifactId>coveralls-maven-plugin</artifactId>
	            <version>${coveralls.version}</version>
	            <configuration>
	              <timestampFormat>${coveralls.timestampFormat}</timestampFormat>
	            </configuration>
	          </plugin>
	        </plugins>
	      </build>
	    </profile>
	</profiles>
	
	<reporting>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <version>${cobertura.version}</version>
          </plugin>
        </plugins>
      </reporting>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>${spring.boot.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>


		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>
</project>